{"version":3,"sources":["../../src/utils.js","../../src/styled.js","../../src/index.js","App.js","index.js"],"names":["getMonthDiff","months","startDate","endDate","year","month","YearWrapper","styled","div","_templateObject","YearLabel","_templateObject2","YearInnerWrapper","_templateObject3","YearVerticalLine","_templateObject4","TimelineWrapper","attrs","props","lightTheme","_templateObject5","itemsCount","TimelineItemTag","_templateObject6","TimelineItem","item","color","_templateObject7","hex","alpha","parseInt","slice","hexToRGB","_props$item2","_props$item3","_props$item4","monthLength","order","startMonth","_props$item7","Timeline","data","yearsSet","Set","forEach","x","add","split","at","minInYearsSet","Math","min","maxInYearsSet","max","currentYear","Date","getFullYear","maxYear","yearsArray","filteredData","filter","Number","map","indexOf","push","items","_loop","React","length","key","_x$items","y","title","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e11417b.chunk.js","sourcesContent":["export const getMonthDiff = ({ startDate, endDate }) => {\n  let months;\n  months = (endDate?.year - startDate?.year) * 12;\n  months -= startDate?.month;\n  months += endDate?.month;\n  return months <= 0 ? 0 : months;\n}\n\nexport const hexToRGB = ({ hex, alpha }) => {\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n}","import styled from 'styled-components';\nimport { hexToRGB } from './utils';\n\n// ширина 1 месяца в пикселях, 1 год по макету занимает 270px\nconst monthCssWidth = 270 / 12;\n// высота одного элемента на таймлайне\nconst itemCssHeight = 34;\n// Отступ снизу у элементов на Timeline\nconst itemCssMarginBottom = 10\n\nexport const YearWrapper = styled.div`\n  flex-basis: 270px;\n  flex-grow: 0;\n  flex-shrink: 0;\n`;\n\nexport const YearLabel = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  margin-left: -20px;\n`;\n\nexport const YearInnerWrapper = styled.div`\n  position: relative;\n`;\n\nexport const YearVerticalLine = styled.div`\n  width: 1px;\n  margin-top: 48px;\n`;\nexport const TimelineWrapper = styled.div.attrs(props => ({\n  lightTheme: props?.lightTheme || false\n}))`\n  display: flex;\n  overflow-x: scroll;\n  padding-left: 20px;\n  \n  ${YearLabel}{\n    color: ${props => props?.lightTheme ? \n      'rgba(0, 0, 0, 0.3)' :\n      'rgba(255, 255, 255, 0.3)'\n    };\n  };\n  ${YearVerticalLine}{\n    height: ${props => (itemCssHeight + itemCssMarginBottom) * props?.itemsCount}px;\n    background: ${props => props?.lightTheme ? \n      'rgba(0, 0, 0, 0.3)' :\n      'rgba(255, 255, 255, 0.3)'\n    };\n  };\n`;\n\nexport const TimelineItemTag = styled.div`\n  width: 6px;\n  height: 100%;\n  margin-right: 12px;\n  border-radius: 4px;\n`;\n\nexport const TimelineItem = styled.div.attrs(props => ({\n  item: {\n    ...props?.item,\n    color: props?.item?.color || '#ffffff'\n  }\n}))`\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n  height: ${itemCssHeight}px;\n  border-radius: 4px;\n  padding: 3px;\n  font-weight: 600;\n  font-size: 14px;\n  background: ${props => hexToRGB({ hex: props?.item?.color, alpha: 0.5 })};\n  color: ${props => props?.item?.color};\n  width: ${props => monthCssWidth * props?.item?.monthLength}px;\n  top: ${props => (itemCssHeight + itemCssMarginBottom) * (props?.item?.order - 1)}px;\n  left: ${props => props?.item?.startMonth / 12 * 100}%;\n\n  ${TimelineItemTag}{\n    background: ${props => props?.item?.color};\n  }\n`;\n","import React from 'react'\nimport { getMonthDiff } from './utils';\nimport {\n  TimelineWrapper,\n  YearWrapper,\n  YearLabel,\n  YearInnerWrapper,\n  YearVerticalLine,\n  TimelineItem,\n  TimelineItemTag\n} from './styled';\n\nexport const Timeline = ({ data = [], lightTheme = false }) => {\n  // Составляем список уникальных значений из data.startYear и data.endYear\n  let yearsSet = new Set();\n\n  data.forEach(x => {\n    yearsSet.add(x?.startDate.split('.').at(1))\n    yearsSet.add(x?.endDate.split('.').at(1))\n  });\n\n  // Находим минимальное, максимальное и текущее значение года\n  const minInYearsSet = Math.min(...yearsSet);\n  const maxInYearsSet = Math.max(...yearsSet);\n  const currentYear = new Date().getFullYear();\n  const minYear = minInYearsSet;\n  const maxYear = maxInYearsSet < currentYear ? currentYear : maxInYearsSet;\n\n  // Составляем массив годов от минимального (data.startDate) до максимального (data.endDate)\n  // если максимальное значение в data.endDate меньше чем текущий год, то строим массив до текущего года\n  // и помещаем необходимые данные из data в нужный год\n  let yearsArray = [];\n  for (let year = minYear; year <= maxYear; year++) {\n    // находим данные для года, по которому проходим циклом\n    // и считаем количество месяцев между data.startDate и data.endDate\n    const filteredData = data.filter(x => Number(x?.startDate.split('.').at(1)) === year)\n      .map(x => ({\n        ...x,\n        monthLength: getMonthDiff({\n          startDate: { year: Number(x?.startDate.split('.').at(1)), month: Number(x?.startDate.split('.').at(0)) },\n          endDate: { year: Number(x?.endDate.split('.').at(1)), month: Number(x?.endDate.split('.').at(0)) }\n        }),\n        startMonth: Number(x?.startDate.split('.').at(0)),\n        order: x?.order || (data?.indexOf(x) + 1)\n      }));\n    // записываем в массив с годами\n    yearsArray.push({\n      year,\n      items: filteredData\n    })\n  };\n  return (\n    <TimelineWrapper lightTheme={lightTheme} itemsCount={data?.length}>\n      {yearsArray?.map(x =>\n        <YearWrapper key={x?.year}>\n          <YearLabel>{x?.year}</YearLabel>\n          <YearInnerWrapper>\n            <YearVerticalLine />\n            {x?.items?.map(y =>\n              <TimelineItem key={y?.title} item={y}>\n                <TimelineItemTag />\n                {y?.title}\n              </TimelineItem>\n            )}\n          </YearInnerWrapper>\n        </YearWrapper>\n      )}\n    </TimelineWrapper>\n  );\n};\n","import React from 'react'\nimport './styles.module.css';\n\nimport { Timeline } from 'react-fancy-timeline'\n\nconst data = [\n  {\n    title: 'React (senior)',\n    startDate: '06.2010',\n    endDate: '06.2017',\n    color: '#61DAFB'\n  },\n  {\n    title: 'JS',\n    startDate: '06.2013',\n    endDate: '10.2015',\n    color: '#FFDF00'\n  },\n  {\n    title: 'HTML',\n    startDate: '04.2007',\n    endDate: '01.2010',\n    color: '#ff6262'\n  },\n  {\n    title: 'CSS',\n    startDate: '09.2007',\n    endDate: '04.2009',\n    color: '#CC649C'\n  },\n]\n\nconst App = () => {\n  return <Timeline data={data} />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}